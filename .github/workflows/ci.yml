name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false

jobs:
  validate:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Run spotless check
        run: ./gradlew spotlessCheck
      
      - name: Run detekt
        run: ./gradlew detekt
      
      - name: Run lint
        run: ./gradlew lintDebug
      
      - name: Run unit tests
        run: ./gradlew testDebugUnitTest
      
      - name: Upload test reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports
          path: |
            **/build/reports/tests/
            **/build/reports/lint-results-debug.html
            **/build/reports/detekt/
          retention-days: 7
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: success()
        with:
          file: ./build/reports/jacoco/test/jacocoTestReport.xml
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build debug APK
        run: ./gradlew assembleDebug
      
      - name: Build release AAR
        run: ./gradlew :sdk-qrscanner:assembleRelease
      
      - name: Upload debug APK
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk
          path: host-app/build/outputs/apk/debug/
          retention-days: 7
      
      - name: Upload release AAR
        uses: actions/upload-artifact@v3
        with:
          name: release-aar
          path: sdk-qrscanner/build/outputs/aar/
          retention-days: 30

  instrumentation-test:
    name: Instrumentation Tests
    runs-on: macos-latest
    needs: validate
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-29
      
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      
      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck

  publish:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: [build, instrumentation-test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Publish to GitHub Packages
        run: ./gradlew :sdk-qrscanner:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: publish
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get version
        id: version
        run: |
          VERSION=$(grep "version = " sdk-qrscanner/build.gradle.kts | sed 's/.*"\(.*\)".*/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Download AAR
        uses: actions/download-artifact@v3
        with:
          name: release-aar
          path: ./aar
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          release_name: Bureau QR Scanner SDK v${{ steps.version.outputs.VERSION }}
          body: |
            ## Bureau QR Scanner SDK v${{ steps.version.outputs.VERSION }}
            
            ### Features
            - White-label QR scanning for government IDs
            - Support for Aadhaar, PAN, and Voter ID documents
            - Customizable branding and themes
            - Real-time camera scanning with ML Kit
            - Bureau API integration
            
            ### Integration
            ```kotlin
            implementation("com.bureau.sdk:qrscanner:${{ steps.version.outputs.VERSION }}")
            ```
            
            ### Usage
            ```kotlin
            BureauQrSdk.start(
                context = this,
                config = BrandingConfig(
                    primaryColor = 0xFF0066CC.toInt(),
                    secondaryColor = 0xFF00CC66.toInt()
                ),
                callback = object : BureauQrCallback { ... }
            )
            ```
          draft: false
          prerelease: ${{ contains(github.ref, 'develop') }} 